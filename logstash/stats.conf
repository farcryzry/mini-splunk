input {
	exec {
	    add_field => {}
	    codec => "plain"
	    command => "ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{print $1}' | tr '\n' ' ' && top -b -n1 | head -n3 | tail -n1 | tr '\n' ' '"
	    interval => 5
	    type => "cpu"
	}

	exec {
	    add_field => {}
	    codec => "plain"
	    command => "ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{print $1}' | tr '\n' ' ' && top -b -n1 | head -n2 | tail -n1 | tr '\n' ' '"
	    interval => 5
	    type => "tasks"
	}

	exec {
	    add_field => {}
	    codec => "plain"
	    command => "ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{print $1}' | tr '\n' ' ' && top -b -n1 | head -n4 | tail -n1 | tr '\n' ' '"
	    interval => 5
	    type => "memory"
	}

	exec {
	    add_field => {}
	    codec => "plain"
	    command => "ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{print $1}' | tr '\n' ' ' && top -b -n1 | head -n5 | tail -n1 | tr '\n' ' '"
	    interval => 5
	    type => "swap"
	}

	exec {
	    add_field => {}
	    codec => "plain"
	    command => "ifconfig eth0 | grep 'inet addr:' | cut -d: -f2 | awk '{print $1}' | tr '\n' ' ' && ps -eLf | wc -l | tr '\n' ' '"
	    interval => 5
	    type => "thread"
	}
}
filter{
    grok {
	type => "cpu"
        match => ["message", "%{IP:ip}%{SPACE}Cpu\(s\)\:.+%{NUMBER:us}\%.+%{NUMBER:sy}\%.+%{NUMBER:ni}\%.+%{NUMBER:id}\%.+%{NUMBER:wa}\%.+%{NUMBER:hi}\%.+%{NUMBER:si}\%.+%{NUMBER:st}\%.+"]
    }

    grok {
	type => "tasks"
        match => ["message", "%{IP:ip}%{SPACE}Tasks\:%{SPACE}%{NUMBER:total}%{SPACE}total\,%{SPACE}%{NUMBER:running}\srunning\,%{SPACE}%{NUMBER:sleeping}%{SPACE}sleeping\,%{SPACE}%{NUMBER:stopped}%{SPACE}stopped\,%{SPACE}%{NUMBER:zombie}.+"]
    }

    grok {
	type => "memory"
        match => ["message", "%{IP:ip}%{SPACE}Mem\:%{SPACE}%{NUMBER:total}k%{SPACE}total\,%{SPACE}%{NUMBER:used}k%{SPACE}used\,%{SPACE}%{NUMBER:free}k%{SPACE}free\,%{SPACE}%{NUMBER:buffers}k.+"]
    }

    grok {
	type => "swap"
        match => ["message", "%{IP:ip}%{SPACE}Swap\:%{SPACE}%{NUMBER:total}k%{SPACE}total\,%{SPACE}%{NUMBER:used}k%{SPACE}used\,%{SPACE}%{NUMBER:free}k%{SPACE}free\,%{SPACE}%{NUMBER:cached}k.+"]
    }

    grok {
	type => "thread"
        match => ["message", "%{IP:ip}%{SPACE}%{NUMBER:total}"]
    }

    mutate {
        remove_field => [ "host", "command", "@version" ]
    }
}
output {
  stdout { codec => rubydebug }
  file {
        path => "./stats.txt"
  }
  #mongodb {
  #      codec => "plain"
  #      collection => "stats"
  #      database => "logstash"
  #      generateId => false
  #      isodate => false
  #      retry_delay => 3
  #      uri => "mongodb://10.189.238.94:27017"
  #      workers => 1
  #}
  elasticsearch_http {
    codec => "plain"
    host => "10.189.238.94"
    port => 9200
    replication => "sync"  
    workers => 1
  }
}
